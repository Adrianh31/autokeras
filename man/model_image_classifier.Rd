% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_image_classifier.R
\name{model_image_classifier}
\alias{model_image_classifier}
\title{Auto-Keras Model}
\usage{
model_image_classifier(
  num_classes = NULL,
  multi_label = FALSE,
  loss = NULL,
  metrics = NULL,
  name = "image_classifier",
  max_trials = 100,
  directory = NULL,
  objective = "val_loss",
  overwrite = TRUE,
  seed = NULL
)
}
\arguments{
\item{num_classes}{: numeric. Defaults to `NULL`. If `NULL`, it will infer
from the data.}

\item{multi_label}{: logical. Defaults to `FALSE`.}

\item{loss}{: A Keras loss function. Defaults to use `binary_crossentropy` or
`categorical_crossentropy` based on the number of classes.}

\item{metrics}{: A list of Keras metrics. Defaults to use `accuracy`.}

\item{name}{: character. The name of the AutoModel. Defaults to
"image_classifier".}

\item{max_trials}{: numeric. The maximum number of different Keras Models to
try. The search may finish before reaching the `max_trials`. Defaults to
`100`.}

\item{directory}{: character. The path to a directory for storing the search
outputs. Defaults to NULL, which would create a folder with the name of the
AutoModel in the current directory.}

\item{objective}{: character. Name of model metric to minimize or maximize,
e.g. "val_accuracy". Defaults to "val_loss".}

\item{overwrite}{: logical. Defaults to `TRUE`. If `FALSE`, reloads an
existing project of the same name if one is found. Otherwise, overwrites
the project.}

\item{seed}{: numeric. Random seed.}
}
\description{
AutoKeras image classification class.
It is used for image classification. It searches convolutional neural
network architectures for the best configuration for the image dataset.
}
\details{
Important: The object returned by this function behaves like an R6 object,
i.e., within function calls with this object as parameter, it is most likely
that the object will be modified. Therefore it is not necessary to assign
the result of the functions to the same object.
}
\examples{
# Create an image classifier
clf <- model_image_classifier()
}
